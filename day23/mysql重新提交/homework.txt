查询姓“李”的老师的个数
select count(*) from teacher where Tname like '李%';

查询男女生人数个数
select count(*),sex from student group by sex;

查询同名同姓学生名单，并统计同名人数
select * from student where sname in (select sname from student group by sname having COUNT(*)>1);
select count(*),sname from student group by sname having count(*)>1;

1981年出生的学生名单
select * from student where year(Sbrithday)= '1981';

查询平均成绩大于60分的同学的学号和平均成绩
select sid, avg(score) from sc group by sid having avg(score)>=60;

求选了课程的学生人数
select  cid,count(cid) from sc group by cid;

查询至少选修两门课程的学生学号
select sid ,count(*) from sc group by sid having count(*)>=2;

查询各科成绩最高和最低的分。以如下形式显示：课程ID，最高分，最低分
select Cid '课程ID',max(Score) '最高分',min(Score) '最低分' from sc group by Cid;

统计每门课程的学生选修人数。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列
select Cid,count(*) from sc group by cid order by count(*) desc ,cid asc;

以下练习针对部门员工表，请导入scott.sql的数据

打印入职时间超过38年的员工信息
select * from emp where 2018-year(hiredate)>=38;

把hiredate列看做是员工的生日,求本月过生日的员工
select ename,date(hiredate) from emp where month(hiredate)=12;

把hiredate列看做是员工的生日,求下月过生日的员工
select ename,date(hiredate) from emp where month(hiredate)=1;

求1980年下半年入职的员工
select * from emp where year(hiredate)=1980 and month(hiredate)>6;

请用两种的方式查询所有名字长度为4的员工的员工编号,姓名
select empno ,ename from emp having length(ename)=4;

显示各种职位的最低工资
select job ,min(sal) from emp group by job;

求1980年各个月入职的的员工个数
select month(hiredate) ,count(*) from emp where year(hiredate)=1980 group by month(hiredate);

查询每个部门的最高工资
select deptno ,max(sal) from emp group by deptno order by  max(sal) desc ;

查询每个部门,每种职位的最高工资
select deptno 部门编号,job 职位,max(sal) 最高工资 from emp group by deptno,job order by max(sal);

查询各部门的总工资和平均工资
select deptno,sum(sal),avg(sal) from emp group by deptno;

查询10号部门,20号部门的平均工资（尝试用多种写法）
select deptno,avg(sal) from emp where deptno=20 or deptno=10 group by deptno;

查询平均工资高于2000元的部门编号和平均工资
select deptno,avg(sal) from emp group by deptno having avg(sal)>2000;

统计公司里经理的人数
select count(*),job from emp where job = 'MANAGER';

查询工资最高的3名员工信息
select * from emp order by sal desc limit 3;

查询工资由高到低第6到第10的员工信息
select * from emp order by sal desc limit 5,5;

查询李四学习的课程，考试分数，课程的授课老师
```sql
select b.cname, c.score, d.tname  from 
student a inner join sc c on(a.sid=c.sid)  
          inner join course b on (c.cid=b.cid)
          inner join teacher d on (b.tid=d.tid)
          where a.sname='李四';
```
查询王五有哪些课程没选，显示这些课程名称
(select cid from student a inner join sc b on a.sid=b.sid
                        where a.sname='王五') d;

select * from course where cid not in(1,2);

代入：
select * from course where cid not in(select cid from student a inner join sc b on a.sid=b.sid
                        where a.sname='王五');

select * from course c left join (select cid from student a inner join sc b on a.sid=b.sid
                        where a.sname='王五') d on c.cid = d.cid where d.cid is null;                         

                    

查询所有同学的学号、姓名、选课数、总成绩
select sc.sid,student.sname,count(cid) 选课数, sum(score) 总分 from 
student  inner join sc  on (student.sid = sc.sid)
		group by sc.sid; 


查询所有课程成绩都小于等于60分的同学的学号、姓名；
select sc.sid , student.sname from student 
inner join sc on student.sid = sc .sid
group by sc.sid having max(score) <=60;

查询没有学全所有课的同学的学号、姓名；
select sid from sc group by sid having count(cid) < 7

select student.sid ,student.sname 
from student inner join 
(select sid from sc group by sid having count(cid) < 7) s on
s.sid = student.sid ;

查询每门课程选修人数，格式为课程名称，人数；
select course.cname,count(sc.cid) 
from course inner join 
sc on course.cid = sc.cid group by sc.cid order by count(sc.cid) desc;

查询出只选修了一门课程的全部学生的学号和姓名 ；
select student.sid ,student.sname from student inner join sc on sc.sid = student.sid group by sc.sid having count(cid) = 1;

查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列
select avg(score),cid from sc group by cid order by avg(score), cid desc;

查询学生平均成绩大于80的所有学生的学号、姓名和平均成绩
select sid ,avg(score) from sc group by sid having avg(score) > 80;

查询课程相同且成绩相同的的学生的学号、课程号、学生成绩
(select cid,score from sc group by cid,score having(count(*)>=2)) b

select * from sc a inner join b on a.cid=b.cid and a.score=b.score;

select a.* from sc a inner join (select cid,score from sc group by cid,score having(count(*)>=2)) b on a.cid=b.cid and a.score=b.score;

查询全部学生都选修的课程的课程号和课程名
 select cid from sc group by cid having count(cid) =7;    
 
 select sc.cid,course.cname from sc inner join course on sc.cid = course.cid group by sc.cid having count(sc.cid) = 7;
查询两门以上不及格课程的同学的学号及其平均成绩
select sid , avg(score) from sc group by sid  having sum(score < 60) >= 2;

表连接查询

查询所有课程成绩都小于等于60分的同学的学号、姓名
(select sid from sc group by sid having max(score)<=60) a /*1006, 1007*/

用表连接
select * from student b inner join (select sid from sc group by sid having max(score)<=60) a on b.sid=a.sid;
用in
select * from student where sid in (select sid from sc group by sid having max(score)<=60);

用取反的做法
select sid from sc where score > 60;
select * from student where sid not in(select sid from sc where score > 60);

查询没有学全所有课的同学的学号、姓名
select count(*) from course; /*求得总课程数*/

(select sid from sc group by sid having count(*)<(select count(*) from course)) a /*求得没有学全总课程数的sid*/

select * from (select sid from sc group by sid having count(*)<(select count(*) from course))a inner join student b on a.sid=b.sid;

查询每门课程选修人数，格式为课程名称，人数
先统计个数，再连接课程表
select totalcount,cname from 
	(select cid, count(*) totalcount from sc group by cid) 
a inner join course b on a.cid=b.cid;
先连接课程表，再统计个数
select a.cid,cname,count(*) from sc a inner join course b on a.cid=b.cid group by a.cid, cname;

查询全部学生都选修的课程的课程号和课程名
select * from (select sid from sc group by sid having count(*)=(select count(*) from course))a inner join student b on a.sid=b.sid;

查询两门以上不及格课程的同学的学号及其平均成绩
select sid,avg(score) from sc where sid in 
	(select sid from sc where score<60 group by sid having count(*)>=2) 
group by sid;

查询2号课程成绩比1号课程成绩低的学生的学号、姓名
(select sid,cid,score from sc where cid=1)a
(select sid,cid,score from sc where cid=2)b

(select a.sid from (select sid,cid,score from sc where cid=1)a inner join (select sid,cid,score from sc where cid=2)b on a.sid=b.sid and a.score>b.score)c

select * from (select a.sid from (select sid,cid,score from sc where cid=1)a inner join (select sid,cid,score from sc where cid=2)b on a.sid=b.sid and a.score>b.score)c inner join student d where c.sid=d.sid;

查询学过1号课程并且也学过编号2号课程的同学的学号、姓名
select * from (select a.sid from (select sid,cid,score from sc where cid=1)a inner join (select sid,cid,score from sc where cid=2)b on a.sid=b.sid)c inner join student d where c.sid=d.sid;

查询没学过“叶平”老师课的同学的学号、姓名
找到的是叶平教过的学生的sid
select sid from 
teacher a inner join course b on a.tid=b.tid inner join sc c on b.cid=c.cid where a.tname='叶平';

再利用not in 排除这些sid
select * from student where sid not in (select sid from 
teacher a inner join course b on a.tid=b.tid inner join sc c on b.cid=c.cid where a.tname='叶平');
